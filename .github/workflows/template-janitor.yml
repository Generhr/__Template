# This workflow will cleanup everything unneeded from the template.
name: Template Janitor

on:
  push:
    branches: [main, master, dev]
    # Trigger only when changes are made to this workflow file.
    paths: [.github/workflows/template-janitor.yml]

permissions:
  contents: write

env:
  # Path to the template files
  TEMPLATES_PATH: ".github/template"

jobs:
  template-cleanup:
    runs-on: ubuntu-latest

    permissions:
      # required for all workflows
      security-events: write

      # only required for workflows in private repositories
      actions: read
      contents: read

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Repository Details
        run: |
          echo "REPOSITORY_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "REPOSITORY_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "REPOSITORY_URL=${{ github.repositoryUrl }}" >> $GITHUB_ENV

      - name: Get Owner Details
        uses: octokit/request-action@v2.x
        id: get_repo_meta
        with:
          route: GET /repos/{owner}/{repo}
          owner: ${{ env.REPOSITORY_OWNER }}
          repo: ${{ env.REPOSITORY_NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanitize Repository Name
        run: |
          # Hyphens and dots are forbidden in c++ identifiers so use underscores instead.
          SAFE_REPOSITORY_NAME=$(echo ${{ env.REPOSITORY_NAME }} | sed "s/-/_/g" | sed "s/\./_/g" )
          echo "SAFE_REPOSITORY_NAME=$SAFE_REPOSITORY_NAME" >> $GITHUB_ENV

      - name: Substitute Placeholders
        run: |
          # Replace placeholders in CMakeLists.txt and source files with values pulled from the new repository.
          find include src test cmake -type f -exec sed -i "s|__Name|${{ env.SAFE_REPOSITORY_NAME }}|g" CMakeLists.txt {} +
          sed -i "s|__Description|${{ fromJson(steps.get_repo_meta.outputs.data).description }}|g" CMakeLists.txt
          sed -i "s|__Url|${{ fromJson(steps.get_repo_meta.outputs.data).html_url }}|g" CMakeLists.txt

          # Fill in placeholders of readme and move it into place.
          sed -i "s|__Owner|${{ env.REPOSITORY_OWNER }}|g" ${{ env.TEMPLATES_PATH }}/README.md
          sed -i "s|__Name|${{ env.REPOSITORY_NAME }}|g" ${{ env.TEMPLATES_PATH }}/README.md
          sed -i "s|__Description|${{ fromJson(steps.get_repo_meta.outputs.data).description }}|g" ${{ env.TEMPLATES_PATH }}/README.md
          cp ${{ env.TEMPLATES_PATH }}/README.md README.md

      - name: Print the Diff After Substitutions
        run: git diff ':!README.md'

      - name: Remove Unwanted Files
        run: |
          # Use a removal list to remove files to avoid making changes to this workflow. No tests needed as this will fail if any file from the list is missing or misspelled.
          xargs rm -r < ${{ env.TEMPLATES_PATH }}/removal-list

          # Remove the template directory
          rm -r ${{ env.TEMPLATES_PATH }}

          # Remove the auto-clang-format and template-janitor workflows.
          rm .github/workflows/auto-clang-format.yml
          rm .github/workflows/template-janitor.yml

      - name: Build
        # Build it because something may have broken in the cpp/hpp files.
        uses: github/codeql-action/autobuild@v2

      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        # Only commit and push if this is not a template project anymore.
        if: fromJson(steps.get_repo_meta.outputs.data).is_template != true
        with:
          add: -A
          author_name: Template Janitor
          author_email: template.janitor@example.com
          message: "Cleanup template and initialize repository"
          pathspec_error_handling: exitImmediately
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
